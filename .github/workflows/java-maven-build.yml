name: Java Maven Build

on:
  workflow_call:
    inputs:
      use-cache:
        default: true
        required: false
        type: boolean
      use-jib:
        default: true
        required: false
        type: boolean
      java-version:
        default: '21'
        required: false
        type: string
      java-distribution:
        default: 'temurin'
        required: false
        type: string
      surefire-report:
        default: true
        required: false
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - uses: actions/checkout@v4

      - name: Set SHORT_COMMIT_SHA
        run: echo "SHORT_COMMIT_SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: Set TIMESTAMP_VERSION
        run: echo "TIMESTAMP_VERSION=$(date +%Y%m%d%H%M)" >> "$GITHUB_ENV"

      - name: Set up JDK ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: maven

      - name: Cache local Maven repository
        if: inputs.use-cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile
        run: mvn clean compile -U -Dchangelist=${{ env.TIMESTAMP_VERSION }} --file pom.xml

      - name: Test
        run: mvn verify --batch-mode --fail-at-end --errors -Dchangelist=${{ env.TIMESTAMP_VERSION }} --file pom.xml

      - name: Publish Test Report
        if: inputs.surefire-report && (success() || failure())
        uses: scacap/action-surefire-report@v1

      - name: Check az installed
        run: echo "az keyvault -h"

      - name: Check secret
        run: echo ${{secrets.AZURE_CREDENTIALS}}

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve nexus password from Azure key vault
        uses: azure/CLI@v1
        with:
          inlineScript: |
            secretValue=$(az keyvault secret show --name "nexus-docker-password" --vault-name "kv-eGovVault-prod-001" --query "value")
            echo "NEXUS_DOCKER_PASSWORD="$secretValue >> $GITHUB_ENV

#      - name: Build container with JIB
#        if: inputs.use-jib
#        run: mvn package jib:build -Dchangelist=${{ env.TIMESTAMP_VERSION }} -Ddocker.image.version=${{ env.SHORT_COMMIT_SHA }}

